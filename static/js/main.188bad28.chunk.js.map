{"version":3,"sources":["components/Bit.js","components/Bits.js","components/Notation.js","components/Number.js","components/Operation.js","App.js","reportWebVitals.js","index.js"],"names":["Bit","props","_jsx","className","getBit","number","Number","name","onClick","e","bit","onChange","value","setBit","children","Bits","bits","key","n","push","NotationEnum","Hex","Dec","Oct","Notation","_jsxs","type","readOnly","checked","notation","caption","toString","onInput","parseInt","toNumber","target","onFocus","select","OperationEnum","AND","NOT","OR","XOR","Operation","operation","swap","calculate","value1","value2","App","setOperation","useState","number1","setNumber1","number2","setNumber2","result","setResult","setNotation","href","rel","n1","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.188bad28.chunk.js","sourcesContent":["function Bit(props) {\n    return <button\n        className={getBit(props.number, Number(props.name)) ? 'bit-button bit-on' : 'bit-button bit-off'}\n        onClick={(e) => { props.onChange(swapBit(props.number, Number(props.name))) }}>\n        {props.name}\n    </button>\n}\n\nfunction setBit(number, bit, value) {\n    if (value) {\n        return number |= (1 << bit)\n    }\n    return number &= ~(1 << bit)\n}\n\nfunction getBit(number, bit) { \n    return number & (1 << bit) ? true : false\n}\n\nfunction swapBit(number, bit) {\n    return setBit(number, bit, !getBit(number, bit))\n}\n\nexport { Bit, setBit, getBit, swapBit }\n","import { Bit } from \"./Bit\"\n\nfunction Bits(props) {\n    const bits = []\n    let key = 0\n    for (let n = 31; n >= 0; n--) {\n        bits.push(\n            // <div>\n                <Bit\n                    key={key}\n                    name={n}\n                    number={props.number}\n                    onChange={props.onChange}\n                />\n            // </div>\n        )\n        key++\n        if (n && n % 4 === 0) {\n            bits.push(<div key={key} className=\"bit-space\"></div>)\n            key++\n        }\n\n    }\n    return bits\n}\n\nexport default Bits","const NotationEnum = {\n    Hex: 16,\n    Dec: 10,\n    Oct: 8\n}\n\nfunction Notation (props) {\n    return (\n        <div>\n            <div className=\"row center\">\n                <div className=\"notation\">\n                    <input type=\"radio\" readOnly checked={props.notation === NotationEnum.Oct} onClick={(e) => { props.onChange(NotationEnum.Oct) }} /><label>OCT</label>\n                </div>\n                <div className=\"notation\">\n                    <input type=\"radio\" readOnly checked={props.notation === NotationEnum.Dec} onClick={(e) => { props.onChange(NotationEnum.Dec) }}/><label>DEC</label>\n                </div>\n                <div className=\"notation\">\n                    <input type=\"radio\" readOnly checked={props.notation === NotationEnum.Hex} onClick={(e) => { props.onChange(NotationEnum.Hex) }}/><label>HEX</label>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction toString (number, notation) {\n    return number.toString(notation)\n}\n\nfunction toNumber (number, notation) {\n    return parseInt(number, notation)\n}\n\nexport { Notation, NotationEnum, toString, toNumber }","import Bits from './Bits'\nimport { toString, toNumber } from './Notation'\n\nfunction Number(props) {\n    return (\n        <div className=\"column\">\n            <div className=\"row\">\n                <div className=\"row\">\n                    <label className=\"number__label\"><h2>{props.caption}</h2></label>\n                    <h2><input className=\"number__input\"\n                        type=\"text\"\n                        value={ toString((props.number) >>> 0, props.notation) }\n                        onInput={ (e) => props.onChange(toNumber(e.target.value, props.notation)) }\n                        onFocus={ (e) => e.target.select() }\n                    /></h2>\n                </div>\n                <div className=\"row\">\n                    <button className=\"number__operation\" onClick={(e) => { props.onChange(props.number - 1) }}>-</button>\n                    <button className=\"number__operation\" onClick={(e) => { props.onChange(props.number + 1) }}>+</button>\n                    <button className=\"number__operation\" onClick={(e) => { props.onChange(~props.number) }}>i</button>\n                    <button className=\"number__operation\" onClick={(e) => { props.onChange(0) }}>c</button>\n                    <button className=\"number__operation\" onClick={(e) => { props.onChange(props.number << 1) }}>&lt;</button>\n                    <button className=\"number__operation\" onClick={(e) => { props.onChange(props.number >>> 1) }}>&gt;</button>\n                </div>\n            </div>\n            <div className=\"column\">\n                <div className=\"row\">\n                    <Bits number={props.number} onChange={props.onChange}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Number","const OperationEnum = {\n    AND: 0,\n    NOT: 1,\n    OR: 2,\n    XOR: 3\n  }\n\nfunction Operation(props) {\n    return (\n        <div>\n            <div className=\"row center\">\n              <div className=\"operation\">\n                <input type=\"radio\" readOnly checked={props.operation === OperationEnum.AND} onClick={(e) => { props.onChange(OperationEnum.AND) }} /><label>AND</label>\n              </div>\n              <div className=\"operation\">\n                <input type=\"radio\" readOnly checked={props.operation === OperationEnum.OR} onClick={(e) => { props.onChange(OperationEnum.OR) }} /><label>OR</label>\n              </div>\n              <div className=\"operation\">\n                <input type=\"radio\" readOnly checked={props.operation === OperationEnum.XOR} onClick={(e) => { props.onChange(OperationEnum.XOR) }} /><label>XOR</label>\n              </div>\n              <div className=\"operation\">\n                <input type=\"radio\" readOnly checked={props.operation === OperationEnum.NOT} onClick={(e) => { props.onChange(OperationEnum.NOT) }} /><label>NOT</label>\n              </div>\n              <button className=\"operation__button\" onClick={(e) => { props.swap() }}>Swap</button>\n            </div>\n        </div>\n    )\n}\n\nfunction calculate(value1, value2, operation) {\n    switch (operation) {\n      case OperationEnum.AND:\n        return value1 & value2\n      case OperationEnum.NOT:\n        return value1 & ~value2\n      case OperationEnum.OR:\n        return value1 | value2\n      case OperationEnum.XOR:\n        return value1 ^ value2\n      default:\n        return 0\n    }\n}\n\nexport { Operation, OperationEnum, calculate }","import './App.css';\nimport { useState } from 'react';\nimport Number from './components/Number'\nimport { Operation, OperationEnum, calculate } from './components/Operation';\nimport { Notation, NotationEnum } from './components/Notation';\n\nfunction App() {\n  const [operation, setOperation] = useState(OperationEnum.AND)\n  const [number1, setNumber1] = useState(0)\n  const [number2, setNumber2] = useState(0)\n  const [result, setResult] = useState(0)\n  const [notation, setNotation] = useState(NotationEnum.Dec)\n\n  function onChangeNumber1(value) {\n    setNumber1(value)\n    setResult(calculate(value, number2, operation))\n  }\n\n  function onChangeNumber2(value) {\n    setNumber2(value)\n    setResult(calculate(number1, value, operation))\n  }\n\n  function onChangeOperation(value) {\n    setOperation(value)\n    setResult(calculate(number1, number2, value))\n  }\n\n  function Swap() {\n    const n1 = number1\n    setNumber1(number2)\n    setNumber2(n1)\n    setResult(calculate(number2, n1, operation))\n  }\n\n   return (\n     <div className=\"App\">\n       <div className=\"row center\"><h1><a href=\"https://github.com/sergey-untilov/react-bitwise\" target=\"_blank\" rel=\"noreferrer\">Bitwise operator</a></h1></div>\n       <Number caption=\"Number 1\" number={number1} notation={notation} onChange={onChangeNumber1} />\n       <Operation operation={operation} onChange={onChangeOperation} swap={Swap}/>\n       <Number caption=\"Number 2\" number={number2} notation={notation} onChange={onChangeNumber2} />\n       <Notation notation={notation} onChange={setNotation} />\n       <Number caption=\"Result\" number={result} notation={notation} onChange={setResult}/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}